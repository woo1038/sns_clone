{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from \"immer\";\nexport const initialState = {\n  login: false\n};\n/* 변수 */\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\n\nconst dummayUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: \"hello\",\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: \"부기초\"\n  }, {\n    nickname: \"Chanho Lee\"\n  }, {\n    nickname: \"neue zeal\"\n  }],\n  Followers: [{\n    nickname: \"부기초\"\n  }, {\n    nickname: \"Chanho Lee\"\n  }, {\n    nickname: \"neue zeal\"\n  }]\n});\n\nexport const loginReQuestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutReQuestAction = data => {\n  return {\n    type: LOG_OUT_REQUEST,\n    data\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      // 로그인\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = dummayUser(action.data);\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      // 로그아웃\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.gOutLoading = false;\n        draft.gOutError = action.error;\n      // 회원가입\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      // 닉네임\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      // 포스트 관련\n\n      case ADD_POST_TO_ME:\n        {\n          draft.me.Posts.unshift({\n            id: action.data\n          });\n          break;\n          /* return {\r\n            ...state,\r\n            me: {\r\n              ...state.me,\r\n              Posts: [{ id: action.data }, ...state.me.Posts],\r\n            },\r\n          }; */\n        }\n\n      case REMOVE_POST_OF_ME:\n        {\n          draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n          break;\n          /* return {\r\n            ...state,\r\n            me: {\r\n              ...state.me,\r\n              Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n            },\r\n          }; */\n        }\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/dngur/Desktop/porject/sns_clone/front/reducers/user.js"],"names":["produce","initialState","login","LOG_IN_REQUEST","dummayUser","data","nickname","id","Posts","Followings","Followers","loginReQuestAction","type","logoutReQuestAction","LOG_OUT_REQUEST","reducer","state","action","draft","logInLoading","logInDone","logInError","LOG_IN_SUCCESS","me","LOG_IN_FAILURE","error","logOutLoading","logOutDone","logOutError","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","gOutLoading","gOutError","SIGN_UP_REQUEST","signUpLoading","signUpDone","signUpError","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","changeNicknameLoading","changeNicknameDone","changeNicknameError","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","ADD_POST_TO_ME","unshift","REMOVE_POST_OF_ME","filter","v"],"mappings":"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","sourcesContent":["import produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  login: false,\r\n};\r\n\r\n/* 변수 */\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nconst dummayUser = (data) => ({\r\n  ...data,\r\n  nickname: \"hello\",\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [\r\n    { nickname: \"부기초\" },\r\n    { nickname: \"Chanho Lee\" },\r\n    { nickname: \"neue zeal\" },\r\n  ],\r\n  Followers: [\r\n    { nickname: \"부기초\" },\r\n    { nickname: \"Chanho Lee\" },\r\n    { nickname: \"neue zeal\" },\r\n  ],\r\n});\r\n\r\nexport const loginReQuestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const logoutReQuestAction = (data) => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  return produce(state, (draft) => {\r\n    switch (action.type) {\r\n      // 로그인\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = true;\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false;\r\n        draft.logInDone = true;\r\n        draft.me = dummayUser(action.data);\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false;\r\n        draft.logInError = action.error;\r\n        break;\r\n\r\n      // 로그아웃\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.gOutLoading = false;\r\n        draft.gOutError = action.error;\r\n\r\n      // 회원가입\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n\r\n      // 닉네임\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true;\r\n        draft.changeNicknameDone = false;\r\n        draft.changeNicknameError = null;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n\r\n      // 포스트 관련\r\n      case ADD_POST_TO_ME: {\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n        /* return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Posts: [{ id: action.data }, ...state.me.Posts],\r\n          },\r\n        }; */\r\n      }\r\n      case REMOVE_POST_OF_ME: {\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n        /* return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n          },\r\n        }; */\r\n      }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}